{"version":3,"sources":["banner.js","header.js","projectentry.js","App.js","serviceWorker.js","index.js","images/pic02.jpg"],"names":["Banner","id","this","props","SectionId","class","TextCSSId","h2Text","pText","React","Component","Header","HeaderId","HeaderClass","HeaderTextElement","HeaderOptionalElement","ProjectEntry","href","src","ImageSource","alt","ProjectName","ProjectDetailsText","ProjectLink","CVSharedLink","email","linkedinLink","App","document","title","NavBar","className","target","pic01","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"kNAEaA,G,MAAb,iLAEI,OACD,6BAASC,GAAIC,KAAKC,MAAMC,WACvB,yBAAKC,MAAOH,KAAKC,MAAMG,WACtB,4BAAKJ,KAAKC,MAAMI,QAChB,2BAAIL,KAAKC,MAAMK,aANpB,GAA4BC,IAAMC,YCArBC,EAAb,iLAEI,OACC,4BAAQV,GAAIC,KAAKC,MAAMS,SAAUP,MAAOH,KAAKC,MAAMU,aAC9CX,KAAKC,MAAMW,kBACVZ,KAAKC,MAAMY,2BALtB,GAA4BN,IAAMC,WCArBM,EAAb,iLAEI,OACC,yBAAKX,MAAM,MACV,6BAASA,MAAM,WACd,uBAAGY,KAAK,IAAIZ,MAAM,aAAY,yBAAKa,IAAKhB,KAAKC,MAAMgB,YAAaC,IAAI,MACpE,4BAAKlB,KAAKC,MAAMkB,aAChB,2BAAInB,KAAKC,MAAMmB,oBACf,wBAAIjB,MAAM,WACT,4BAAI,uBAAGY,KAAMf,KAAKC,MAAMoB,YAAalB,MAAM,cAAvC,wBATZ,GAAkCI,IAAMC,W,gBCUlCc,EAAe,0FACfC,EAAQ,wBACRC,EAAe,iDAiDNC,E,YA9Cb,WAAYxB,GAAQ,IAAD,6BACjB,4CAAMA,IACNyB,SAASC,MAAQ,gCAEnB,EAAKC,OAAU,yBAAKC,UAAU,UACzB,4BACC,4BAAI,uBAAGd,KAAMO,EAAcQ,OAAO,SAA9B,OACJ,4BAAI,uBAAGf,KAAMS,EAAcM,OAAO,SAA9B,aACJ,4BAAI,uBAAGf,KAAM,UAAYQ,GAArB,iBARS,E,sEAejB,OACE,0BAAMxB,GAAG,OAEP,kBAAC,EAAD,CAAQW,SAAS,SAASC,YAAY,oBAAoBC,kBAAkB,wCAAkBC,sBAAuBb,KAAK4B,SAC9H,kBAAC,EAAD,CAAQ1B,UAAU,SAASE,UAAU,QAAQC,OAAO,qBACpD,6BAASN,GAAG,MAAMI,MAAM,kBACtB,kBAAC,EAAD,CAAQO,SAAS,MAAMC,YAAY,QAAQC,kBAAkB,wCAAkBC,sBAAsB,uPAEvG,6BAASd,GAAG,MAAMI,MAAM,kBACtB,kBAAC,EAAD,CAAQQ,YAAY,QAAQC,kBAAkB,wCAAmBC,sBAAsB,iFACvF,yBAAKV,MAAM,aACV,yBAAKA,MAAM,OACT,kBAAC,EAAD,CAAcc,YAAac,IAAOZ,YAAY,oBAAoBE,YAAY,wBAAwBD,mBAAmB,kHAChH,kBAAC,EAAD,CAAcH,YAAac,IAAOZ,YAAY,oBAAoBE,YAAY,wBAAwBD,mBAAmB,qHAKxI,4BAAQrB,GAAG,UACT,wBAAII,MAAM,aACT,mEACA,uCAAY,uBAAGY,KAAK,uBAAR,aAAZ,yBACA,uD,GAtCYR,IAAMC,WCJJwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASa,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,kBEnInBC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.62da3e55.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Banner extends React.Component {\n  render() {\n    return (\n\t\t\t<section id={this.props.SectionId}>\n\t\t\t\t<div class={this.props.TextCSSId}>\n\t\t\t\t\t<h2>{this.props.h2Text}</h2>\n\t\t\t\t\t<p>{this.props.pText}</p>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n  }\n}\n","import React from 'react';\n\nexport class Header extends React.Component { \n  render() {\n    return (\n   \t\t<header id={this.props.HeaderId} class={this.props.HeaderClass}>\n   \t\t    {this.props.HeaderTextElement}\n          {this.props.HeaderOptionalElement}\n\t\t\t</header>\n\t\t);\n  }\n}\n","import React from 'react';\n\nexport class ProjectEntry extends React.Component { \n  render() {\n    return (\n\t    <div class=\"6u\">\n\t\t    <section class=\"special\">\n\t\t\t    <a href=\"#\" class=\"image fit\"><img src={this.props.ImageSource} alt=\"\" /></a>\n\t\t\t    <h3>{this.props.ProjectName}</h3>\n\t\t\t    <p>{this.props.ProjectDetailsText}</p>\n\t\t\t    <ul class=\"actions\">\n\t\t\t\t    <li><a href={this.props.ProjectLink} class=\"button alt\">More Details</a></li>\n\t\t\t    </ul>\n\t\t    </section>\n\t    </div>\n    );\n  }\n}\n","import React from 'react';\nimport './css/style.css';\n\n// templated html\nimport { Banner } from './banner.js';\nimport { Header } from './header.js';\nimport { ProjectEntry } from './projectentry.js';\n\n// image import\nimport pic01 from './images/pic02.jpg';\n\n\nconst CVSharedLink = \"https://www.dropbox.com/s/k6xvgkrpvnaigf4/Resume - Loc Tran - Personal Website.pdf?dl=0\";\nconst email = \"1991loctran@gmail.com\";\nconst linkedinLink = \"https://www.linkedin.com/in/loc-tran-715018b8/\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    document.title = \"Loc Tran - Software Developer\";\n    \n\t\tthis.NavBar = (<nav className=\"header\">\n\t\t\t    <ul>\n\t\t\t\t    <li><a href={CVSharedLink} target=\"popup\">CV</a></li>\n\t\t\t\t    <li><a href={linkedinLink} target=\"popup\">Linkedin</a></li>\n\t\t\t\t    <li><a href={\"mailto:\" + email}>Contact Me</a></li>\n\t\t\t    </ul>\n\t\t    </nav>\n    );\n  }\n\n  render() {\n    return (\n      <body id=\"top\">\n      \n        <Header HeaderId=\"header\" HeaderClass=\"skel-layers-fixed\" HeaderTextElement=<h1>Loc Tran</h1> HeaderOptionalElement={this.NavBar} />\n\t\t\t\t<Banner SectionId=\"banner\" TextCSSId=\"inner\" h2Text=\"Online Portfolio\"/>\n\t\t\t\t<section id=\"one\" class=\"wrapper style1\">\n\t\t\t\t  <Header HeaderId=\"one\" HeaderClass=\"major\" HeaderTextElement=<h2>About Me</h2> HeaderOptionalElement=<p>I'm a UNSW Computer Science postgraduate student and have been working professionally for 2 years. My specialities lie within full stack and video game development. I am also interested in artificial intelligence.</p> />\n\t\t\t  </section>\n\t\t\t\t<section id=\"two\" class=\"wrapper style2\">\n\t\t\t\t  <Header HeaderClass=\"major\" HeaderTextElement=<h2>Projects</h2>  HeaderOptionalElement=<p>Here are the projects I've personally worked on.</p> />\n\t\t\t\t  <div class=\"container\">\n\t\t\t\t\t  <div class=\"row\">\n\t\t\t\t\t    <ProjectEntry ImageSource={pic01} ProjectName=\"Guy standing here\" ProjectLink=\"http://www.google.com\" ProjectDetailsText=\"Eget mi ac magna cep lobortis faucibus accumsan enim lacinia adipiscing metus urna adipiscing cep commodo id.\" />\n\t\t\t\t\t    \t\t\t\t\t    <ProjectEntry ImageSource={pic01} ProjectName=\"Guy standing here\" ProjectLink=\"http://www.google.com\" ProjectDetailsText=\"Eget mi ac magna cep lobortis faucibus accumsan enim lacinia adipiscing metus urna adipiscing cep commodo id.\" />\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t  </section>\n\t\t\t  \n\t\t\t<footer id=\"footer\">\n\t\t\t\t\t<ul class=\"copyright\">\t\t\t\t\t  \n\t\t\t\t\t\t<li>&copy; Loc Tran. All rights reserved.</li>\n\t\t\t\t\t\t<li>Design: <a href=\"http://templated.co\">TEMPLATED</a> (Modified as needed)</li>\n\t\t\t\t\t\t<li>Images: Loc Tran</li>\n\t\t\t\t\t</ul>\n\t\t\t</footer>\n      </body>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pic02.78f15aae.jpg\";"],"sourceRoot":""}